{"remainingRequest":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\src\\components\\signUp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\src\\components\\signUp.vue","mtime":1554280885140},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport fire from '@/fb.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      pass: '',\r\n      mail: '',\r\n      user: ''\r\n    }\r\n  },\r\n  methods: {\r\n    enviarUser () {\r\n      fire.auth.createUserWithEmailAndPassword(this.mail, this.pass)\r\n        .then(res => {\r\n          console.log(res)\r\n          this.user = res.user.email\r\n          this.$store.commit('userLogged', this.user)\r\n        }).catch(function (error) {\r\n          // Handle Errors here.\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n    },\r\n    googleAuth () {\r\n      let provider = fire.providerGoogle\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n        // ...\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        // var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        // ...\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    githubAuth () {\r\n      let provider = fire.providerGithub\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    facebookAuth () {\r\n      let provider = fire.providerFacebook\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    twitterAuth () {\r\n      let provider = fire.providerTwitter\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\r\n        // You can use these server side with your app's credentials to access the Twitter API.\r\n        var token = result.credential.accessToken\r\n        var secret = result.credential.secret\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    }\r\n  }\r\n}\n",{"version":3,"sources":["signUp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"signUp.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<v-dialog>\r\n  <v-btn depressed slot=\"activator\" class=\"succes\">\r\n    Sign up\r\n  </v-btn>\r\n  <v-card>\r\n    <v-card-text>\r\n      <v-form>\r\n        <v-layout column>\r\n          <v-flex>\r\n            <v-text-field label=\"Email\" v-model=\"mail\"></v-text-field>\r\n          </v-flex>\r\n          <v-flex>\r\n            <v-text-field label=\"Password\" v-model=\"pass\"></v-text-field>\r\n          </v-flex>\r\n        </v-layout>\r\n        <v-btn color=\"succes\" @click=\"enviarUser\">Send</v-btn>\r\n        <v-btn icon @click=\"googleAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/png/512/281/281764.png\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"githubAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/svg/25/25231.svg\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"facebookAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/png/512/124/124010.png\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"twitterAuth\">\r\n          <v-img src=\"https://ikaltours.com/wp-content/uploads/2018/10/twitter-round-logo-png-transparent-background-7.png\"></v-img>\r\n        </v-btn>\r\n      </v-form>\r\n    </v-card-text>\r\n  </v-card>\r\n</v-dialog>\n</template>\r\n\r\n<script>\nimport fire from '@/fb.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      pass: '',\r\n      mail: '',\r\n      user: ''\r\n    }\r\n  },\r\n  methods: {\r\n    enviarUser () {\r\n      fire.auth.createUserWithEmailAndPassword(this.mail, this.pass)\r\n        .then(res => {\r\n          console.log(res)\r\n          this.user = res.user.email\r\n          this.$store.commit('userLogged', this.user)\r\n        }).catch(function (error) {\r\n          // Handle Errors here.\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n    },\r\n    googleAuth () {\r\n      let provider = fire.providerGoogle\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n        // ...\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        // var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        // ...\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    githubAuth () {\r\n      let provider = fire.providerGithub\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    facebookAuth () {\r\n      let provider = fire.providerFacebook\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    twitterAuth () {\r\n      let provider = fire.providerTwitter\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\r\n        // You can use these server side with your app's credentials to access the Twitter API.\r\n        var token = result.credential.accessToken\r\n        var secret = result.credential.secret\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    }\r\n  }\r\n}\n</script>\r\n"]}]}