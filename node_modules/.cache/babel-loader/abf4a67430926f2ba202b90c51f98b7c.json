{"remainingRequest":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\src\\components\\registrar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\src\\components\\registrar.vue","mtime":1555407414827},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\migue\\Documents\\SOC-UBIQUM\\proba\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport fire from '@/fb.js';\nexport default {\n  data: function data() {\n    return {\n      pass: '',\n      mail: '',\n      user: ''\n    };\n  },\n  methods: {\n    enviarUser: function enviarUser() {\n      var _this = this;\n\n      fire.auth.createUserWithEmailAndPassword(this.mail, this.pass).then(function (res) {\n        console.log(res);\n        _this.user = res.user.email;\n\n        _this.$store.commit('userLogged', _this.user);\n      }).catch(function (error) {\n        // Handle Errors here.\n        console.log(error.code);\n        console.log(error.message);\n      });\n    },\n    googleAuth: function googleAuth() {\n      var provider = fire.providerGoogle;\n      fire.auth.signInWithPopup(provider).then(function (result) {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user;\n        console.log(\"El user es \".concat(user, \", su token es \").concat(token)); // ...\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n        // var email = error.email\n        // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential; // ...\n\n        console.log(\"el error es  \".concat(errorCode, \" el mensaje \").concat(errorMessage, \" credencial \").concat(credential));\n      });\n    },\n    githubAuth: function githubAuth() {\n      var provider = fire.providerGithub;\n      fire.auth.signInWithPopup(provider).then(function (result) {\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user;\n        console.log(\"El user es \".concat(user, \", su token es \").concat(token));\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential;\n        console.log(\"el error es  \".concat(errorCode, \" el mensaje \").concat(errorMessage, \" credencial \").concat(credential, \" el email es \").concat(email));\n      });\n    },\n    facebookAuth: function facebookAuth() {\n      var provider = fire.providerFacebook;\n      fire.auth.signInWithPopup(provider).then(function (result) {\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\n        var token = result.credential.accessToken; // The signed-in user info.\n\n        var user = result.user;\n        console.log(\"El user es \".concat(user, \", su token es \").concat(token));\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential;\n        console.log(\"el error es  \".concat(errorCode, \" el mensaje \").concat(errorMessage, \" credencial \").concat(credential, \" el email de error es \").concat(email));\n      });\n    },\n    twitterAuth: function twitterAuth() {\n      var provider = fire.providerTwitter;\n      fire.auth.signInWithPopup(provider).then(function (result) {\n        // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\n        // You can use these server side with your app's credentials to access the Twitter API.\n        var token = result.credential.accessToken;\n        var secret = result.credential.secret; // The signed-in user info.\n\n        var user = result.user;\n        console.log(\"El user es \".concat(user, \", su token es \").concat(token, \" tambien tiene un secret \").concat(secret));\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message; // The email of the user's account used.\n\n        var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n        var credential = error.credential;\n        console.log(\"el error es  \".concat(errorCode, \" el mensaje \").concat(errorMessage, \" credencial \").concat(credential, \" el email de error es \").concat(email));\n      });\n    }\n  }\n};",{"version":3,"sources":["registrar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<v-dialog>\r\n  <v-list-tile-title depressed slot=\"activator\" class=\"succes\">\r\n    Sign up\r\n  </v-list-tile-title>\r\n  <v-card>\r\n    <v-card-text>\r\n      <v-form>\r\n        <v-layout column>\r\n          <v-flex>\r\n            <v-text-field label=\"Email\" v-model=\"mail\"></v-text-field>\r\n          </v-flex>\r\n          <v-flex>\r\n            <v-text-field label=\"Password\" v-model=\"pass\"></v-text-field>\r\n          </v-flex>\r\n        </v-layout>\r\n        <v-btn color=\"succes\" @click=\"enviarUser\">Send</v-btn>\r\n        <v-btn icon @click=\"googleAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/png/512/281/281764.png\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"githubAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/svg/25/25231.svg\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"facebookAuth\">\r\n          <v-img src=\"https://image.flaticon.com/icons/png/512/124/124010.png\"></v-img>\r\n        </v-btn>\r\n        <v-btn icon @click=\"twitterAuth\">\r\n          <v-img src=\"https://ikaltours.com/wp-content/uploads/2018/10/twitter-round-logo-png-transparent-background-7.png\"></v-img>\r\n        </v-btn>\r\n      </v-form>\r\n    </v-card-text>\r\n  </v-card>\r\n</v-dialog>\n</template>\r\n\r\n<script>\nimport fire from '@/fb.js'\r\nexport default {\r\n  data () {\r\n    return {\r\n      pass: '',\r\n      mail: '',\r\n      user: ''\r\n    }\r\n  },\r\n  methods: {\r\n    enviarUser () {\r\n      fire.auth.createUserWithEmailAndPassword(this.mail, this.pass)\r\n        .then(res => {\r\n          console.log(res)\r\n          this.user = res.user.email\r\n          this.$store.commit('userLogged', this.user)\r\n        }).catch(function (error) {\r\n          // Handle Errors here.\r\n          console.log(error.code)\r\n          console.log(error.message)\r\n        })\r\n    },\r\n    googleAuth () {\r\n      let provider = fire.providerGoogle\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n        // ...\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        // var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        // ...\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential}`)\r\n      })\r\n    },\r\n    githubAuth () {\r\n      let provider = fire.providerGithub\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential} el email es ${email}`)\r\n      })\r\n    },\r\n    facebookAuth () {\r\n      let provider = fire.providerFacebook\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n        var token = result.credential.accessToken\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential} el email de error es ${email}`)\r\n      })\r\n    },\r\n    twitterAuth () {\r\n      let provider = fire.providerTwitter\r\n      fire.auth.signInWithPopup(provider).then(function (result) {\r\n        // This gives you a the Twitter OAuth 1.0 Access Token and Secret.\r\n        // You can use these server side with your app's credentials to access the Twitter API.\r\n        var token = result.credential.accessToken\r\n        var secret = result.credential.secret\r\n        // The signed-in user info.\r\n        var user = result.user\r\n        console.log(`El user es ${user}, su token es ${token} tambien tiene un secret ${secret}`)\r\n      }).catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code\r\n        var errorMessage = error.message\r\n        // The email of the user's account used.\r\n        var email = error.email\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential\r\n        console.log(`el error es  ${errorCode} el mensaje ${errorMessage} credencial ${credential} el email de error es ${email}`)\r\n      })\r\n    }\r\n  }\r\n}\n</script>\r\n"],"sourceRoot":"src/components"}]}